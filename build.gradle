plugins {
    id("java-library")
    id("maven-publish")
    id("signing")
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = GROUP
version = VERSION_NAME

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.4.0'

    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'

    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation("org.json:json:20250517")
}

test {
    useJUnitPlatform()
    description = "Execute tests."
    group = "verification"

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = GROUP
            artifactId = POM_ARTIFACT_ID
            version = System.getenv('GITHUB_REF_NAME') ?: version
            pom {
                name = project.name
                description = POM_DESCRIPTION
                url = POM_URL
                packaging = POM_PACKAGING
                licenses {
                    license {
                        name = POM_LICENCE_NAME
                        url = POM_LICENCE_URL
                        distribution = POM_LICENCE_DIST
                    }
                }
                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                        email = POM_DEVELOPER_EMAIL
                    }
                }
                organization {
                    name = POM_DEVELOPER_NAME
                    url = POM_ORGANIZATION_URL
                }
                scm {
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEV_CONNECTION
                    url = POM_URL
                }
            }
        }
    }
    repositories {
        maven {
            name = 'ossrh-staging-api'
            url = uri("https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/")
            credentials {
                username = USERNAME
                password = PASSWORD
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}