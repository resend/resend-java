plugins {
    id 'java'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = GROUP
version = VERSION_NAME

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.4.0'

    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'

    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
}

test {
    useJUnitPlatform()
    description = "Execute tests."
    group = "verification"

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

jar {
    manifest {
        attributes("Implementation-Title": POM_NAME,
                "Implementation-Version": VERSION_NAME,
                "Implementation-Vendor": VENDOR_NAME,
                "Bundle-SymbolicName": POM_ARTIFACT_ID,
                "Export-Package": "com.resend.*")

        archiveVersion = VERSION_NAME
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = POM_NAME
            artifactId = project.name
            version = System.getenv('GITHUB_REF_NAME') ?: version
            pom {
                name = project.name
                description = POM_DESCRIPTION
                url = POM_URL
            }
        }
    }
    repositories {
        maven {
            name = 'MavenCentral'
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
        }
    }
}
